{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","itemName","quantity","isSelected","items","setItems","inputValue","setInputValue","totalItemCount","setTotalItemCount","className","placeholder","onChange","event","target","value","icon","faPlus","onClick","trim","length","newItem","Math","random","newItems","map","item","index","toggleComplete","faCheckCircle","faCircle","faChevronLeft","color","handleQuantityDecrease","faChevronRight","handleQuantityIncrease","faTimes","removedElements","splice","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA+IeA,MA1If,WAAgB,IAAD,EAEaC,mBAAS,CACjC,CAAEC,GAAI,EAAGC,SAAU,SAAUC,SAAU,EAAGC,YAAY,GACtD,CAAEH,GAAI,EAAGC,SAAU,SAAUC,SAAU,EAAGC,YAAY,GACtD,CAAEH,GAAI,EAAGC,SAAU,SAAUC,SAAU,EAAGC,YAAY,KAL3C,mBAENC,EAFM,KAECC,EAFD,OAQuBN,mBAAS,IARhC,mBAQNO,EARM,KAQMC,EARN,OAU+BR,mBAAS,GAVxC,mBAUNS,EAVM,KAUUC,EAVV,KAgEb,OACE,sBAAKC,UAAU,MAAf,UACE,+CACA,sBAAKA,UAAY,eAAjB,UACE,uBACEA,UAAY,iBACZC,YAAc,cACdC,SAAY,SAACC,GAAD,OAAWN,EAAcM,EAAMC,OAAOC,UAEpD,cAAC,IAAD,CACEC,KAAQC,IACRC,QA/DqB,WAE3B,GAAiC,IAA7BZ,EAAWa,OAAOC,OAAtB,CAGA,IAAMC,EAAU,CACdrB,GAAIsB,KAAKC,SACTtB,SAAUK,EACVJ,SAAU,EACVC,YAAY,GAGRqB,EAAQ,sBAAOpB,GAAP,CAAciB,IAE5BhB,EAASmB,GACTf,EAAkBD,EAAiB,UAoDjC,sBAAKE,UAAU,QAAf,UAAwBF,EAAxB,kBAEA,qBAAKE,UAAY,YAAjB,SAEIN,EAAMqB,KAAI,SAACC,EAAMC,GAAP,OACR,sBAAKjB,UAAU,iBAAf,UACE,qBACEA,UAAY,YACZQ,QAAW,kBAtCF,SAACS,GACtB,IAAMH,EAAQ,YAAOpB,GAErBoB,EAASG,GAAOxB,YAAcqB,EAASG,GAAOxB,WAE9CE,EAASmB,GAiCoBI,CAAeD,IAFlC,SAKID,EAAKvB,WACH,qCACE,cAAC,IAAD,CAAiBa,KAAQa,MACzB,sBAAMnB,UAAY,YAAlB,SAAgCgB,EAAKzB,cAIvC,qCACE,cAAC,IAAD,CAAiBe,KAASc,MAC1B,+BAAOJ,EAAKzB,gBAMpB,sBAAKS,UAAU,WAAf,UACE,iCACE,cAAC,IAAD,CACEM,KAAQe,IACRC,MAAO,UACPd,QAAS,kBAvEI,SAACS,GAC9B,IAAMH,EAAQ,YAAOpB,GAEjBoB,EAASG,GAAOzB,SAAW,IAC7BsB,EAASG,GAAOzB,WAChBG,EAASmB,GACTf,EAAkBD,EAAiB,IAiENyB,CAAuBN,QAG1C,sBAAMjB,UAAY,gBAAlB,SAAoCgB,EAAKxB,WACzC,iCACE,cAAC,IAAD,CACEc,KAAMkB,IACNF,MAAM,UACNd,QAAS,kBAxFI,SAACS,GAC9B,IAAMH,EAAQ,YAAOpB,GAErBoB,EAASG,GAAOzB,WAEhBG,EAASmB,GACTf,EAAkBD,EAAiB,GAkFJ2B,CAAuBR,QAG1C,wBAAQjB,UAAY,SAApB,SACE,cAAC,IAAD,CACEM,KAAMoB,IACNJ,MAAQ,MACRd,QAAS,kBApER,SAACS,GAClB,IAAMH,EAAQ,YAAOpB,GACfiC,EAAkBb,EAASc,OAAOX,EAAO,GAC/CtB,EAASmB,GACTf,EAAkBD,EAAiB6B,EAAgB,GAAGnC,UAgEvBqC,CAAWZ,aAzCKD,EAAK1B,aC7EzCwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb3998dd.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight, faCircle, faCheckCircle, faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './index.css'\n\nfunction App() {\n\n  const [items, setItems] = useState([\n    { id: 1, itemName: 'item 1', quantity: 1, isSelected: false },\n    { id: 2, itemName: 'item 2', quantity: 3, isSelected: true },\n    { id: 3, itemName: 'item 3', quantity: 2, isSelected: false },\n  ]);\n\n  const [inputValue, setInputValue] = useState('')\n\n  const [totalItemCount, setTotalItemCount] = useState(6)\n\n  const handleAddButtonClick = () => {\n\n    if (inputValue.trim().length === 0)\n      return;\n\n    const newItem = {\n      id: Math.random(),\n      itemName: inputValue,\n      quantity: 1,\n      isSelected: false\n    }\n\n    const newItems = [...items, newItem]\n\n    setItems(newItems)\n    setTotalItemCount(totalItemCount + 1)\n  }\n\n  const handleQuantityIncrease = (index) => {\n    const newItems = [...items]\n\n    newItems[index].quantity++\n\n    setItems(newItems)\n    setTotalItemCount(totalItemCount + 1)\n  }\n\n  const handleQuantityDecrease = (index) => {\n    const newItems = [...items]\n\n    if (newItems[index].quantity > 1) {\n      newItems[index].quantity--\n      setItems(newItems)\n      setTotalItemCount(totalItemCount - 1)\n    }\n  }\n\n  const toggleComplete = (index) => {\n    const newItems = [...items]\n\n    newItems[index].isSelected = !newItems[index].isSelected\n\n    setItems(newItems)\n  }\n\n  const removeItem = (index) => {\n    const newItems = [...items]\n    const removedElements = newItems.splice(index, 1)\n    setItems(newItems)\n    setTotalItemCount(totalItemCount - removedElements[0].quantity)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Shopping List</h1>\n      <div className = \"add-item-box\">\n        <input \n          className = \"add-item-input\" \n          placeholder = \"Add an item\" \n          onChange = {(event) => setInputValue(event.target.value)}\n        />\n        <FontAwesomeIcon \n          icon = {faPlus} \n          onClick = {handleAddButtonClick}\n        />\n      </div>\n\n      <div className='total'>{totalItemCount} total items</div>\n\n      <div className = \"item-list\">\n        {\n          items.map((item, index) => (\n            <div className=\"item-container\" key = {item.id}>\n              <div \n                className = \"item-name\"\n                onClick = {() => toggleComplete(index)}\n              >\n                {\n                  item.isSelected ? (\n                    <>\n                      <FontAwesomeIcon icon = {faCheckCircle} />\n                      <span className = \"completed\">{ item.itemName }</span>\n                    </>\n                  ) :\n                  (\n                    <>\n                      <FontAwesomeIcon icon = { faCircle } />\n                      <span>{item.itemName }</span>\n                    </>\n                  )\n                }\n              </div>\n\n              <div className=\"quantity\">\n                <button>\n                  <FontAwesomeIcon \n                    icon = {faChevronLeft}\n                    color= \"#69a9d3\"\n                    onClick={() => handleQuantityDecrease(index)}\n                  />\n                </button>\n                <span className = \"item-quantity\">{ item.quantity }</span>\n                <button>\n                  <FontAwesomeIcon \n                    icon={faChevronRight} \n                    color=\"#69a9d3\"\n                    onClick={() => handleQuantityIncrease(index)}\n                  />\n                </button>\n                <button className = \"remove\">\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                    color = \"red\"\n                    onClick={() => removeItem(index)}\n                  />\n                </button>\n\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}